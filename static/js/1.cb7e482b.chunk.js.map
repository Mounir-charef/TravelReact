{"version":3,"sources":["images/img-1.webp","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/MailForm.js","components/pages/Contact.js"],"names":["module","exports","__webpack_require__","p","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus_EmailJSResponseStatus","EmailJSResponseStatus","httpResponse","Object","classCallCheck","this","status","text","responseText","sendPost_sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","keys","forEach","key","setRequestHeader","send","es","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Content-type","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","MailForm","setLoading","_useState","useState","_useState2","slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","content","setContent","_useState7","_useState8","click","setClick","react_default","a","createElement","className","src","require","alt","onLoad","id","onSubmit","e","preventDefault","emailjs","then","result","console","log","error","type","placeholder","value","onChange","required","cols","rows","override","display","margin","translate","color","Contact","loadingContact","setLoadingContact","Fragment","PuffLoader_default","size","cssOverride","aria-label","data-testid","style","components_MailForm"],"mappings":"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","file":"static/js/1.cb7e482b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-1.e7780b8b.webp\";","export var store = {\n  _origin: 'https://api.emailjs.com'\n};","export var validateParams = function validateParams(userID, serviceID, templateID) {\n  if (!userID) {\n    throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n  }\n  if (!serviceID) {\n    throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n  }\n  if (!templateID) {\n    throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n  }\n  return true;\n};","import _classCallCheck from \"C:\\\\Users\\\\Mounir\\\\WebstormProjects\\\\resp_web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nexport var EmailJSResponseStatus = function EmailJSResponseStatus(httpResponse) {\n  _classCallCheck(this, EmailJSResponseStatus);\n  this.status = httpResponse.status;\n  this.text = httpResponse.responseText;\n};","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport var sendPost = function sendPost(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', function (_ref) {\n      var target = _ref.target;\n      var responseStatus = new EmailJSResponseStatus(target);\n      if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n        resolve(responseStatus);\n      } else {\n        reject(responseStatus);\n      }\n    });\n    xhr.addEventListener('error', function (_ref2) {\n      var target = _ref2.target;\n      reject(new EmailJSResponseStatus(target));\n    });\n    xhr.open('POST', store._origin + url, true);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n    xhr.send(data);\n  });\n};","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n  init: init,\n  send: send,\n  sendForm: sendForm\n};","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport var init = function init(userID) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.emailjs.com';\n  store._userID = userID;\n  store._origin = origin;\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport var send = function send(serviceID, templateID, templatePrams, userID) {\n  var uID = userID || store._userID;\n  validateParams(uID, serviceID, templateID);\n  var params = {\n    lib_version: '3.2.0',\n    user_id: uID,\n    service_id: serviceID,\n    template_id: templateID,\n    template_params: templatePrams\n  };\n  return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n    'Content-type': 'application/json'\n  });\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nvar findHTMLForm = function findHTMLForm(form) {\n  var currentForm;\n  if (typeof form === 'string') {\n    currentForm = document.querySelector(form);\n  } else {\n    currentForm = form;\n  }\n  if (!currentForm || currentForm.nodeName !== 'FORM') {\n    throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n  }\n  return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport var sendForm = function sendForm(serviceID, templateID, form, userID) {\n  var uID = userID || store._userID;\n  var currentForm = findHTMLForm(form);\n  validateParams(uID, serviceID, templateID);\n  var formData = new FormData(currentForm);\n  formData.append('lib_version', '3.2.0');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', uID);\n  return sendPost('/api/v1.0/email/send-form', formData);\n};","import React, {useState} from 'react';\r\nimport './Form.css';\r\nimport emailjs from 'emailjs-com'\r\n\r\n\r\nfunction MailForm({setLoading}) {\r\n\r\n    const [name, setName] = useState(''),\r\n        [email, setEmail] = useState(''),\r\n        [content, setContent] = useState(''),\r\n        [click, setClick] = useState(false);\r\n\r\n\r\n    const sendEmail = e => {\r\n        e.preventDefault();\r\n        emailjs.sendForm('service_czd3flg', 'template_auqe7vo', e.target, 'SGdIuvI3-356t5H34')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n        // 👇️ clear all input values in the form\r\n        setName('');\r\n        setEmail('');\r\n        setContent('');\r\n        setClick(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <img className='bg-img' src={require(\"../images/img-1.webp\")} alt='background-img' onLoad={() => {\r\n                setLoading(false)\r\n            }}/>\r\n            <div className='form-wrap'>\r\n                <h1 className='form-title'> Contact us </h1>\r\n                {click && <h3 className='form-confirmation'> EMAIL SENT </h3>}\r\n                <div className=\"form-box\">\r\n                    <form id='form1' className='form-content' onSubmit={sendEmail}>\r\n\r\n                        <input className='form-item' type=\"text\" name='name' placeholder='Name' value={name} onChange={e => setName(e.target.value)} required/>\r\n                        <input className='form-item' type=\"email\" name='email' placeholder='Email' value={email} onChange={e => setEmail(e.target.value)} required/>\r\n                        <textarea className='form-item' name=\"content\" id=\"text\" cols=\"30\" rows=\"5\" placeholder='Message' onChange={e => setContent(e.target.value)} value={content} required></textarea>\r\n\r\n                        <input type=\"submit\" className='submit--outline submit--medium'/>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MailForm;","import React, {useState} from 'react';\r\nimport MailForm from \"../MailForm\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\nconst override = {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    translate : \"0 40vh\",\r\n    color: \"202020\"\r\n};\r\n\r\n\r\nfunction Contact() {\r\n    const [loadingContact, setLoadingContact] = useState(true)\r\n    return (\r\n        <>\r\n            {loadingContact && (\r\n                <PuffLoader\r\n                    size={50}\r\n                    color=\"#252525\"\r\n                    cssOverride={override}\r\n                    aria-label=\"Loading Spinner\"\r\n                    data-testid=\"loader\"\r\n                />\r\n            )}\r\n            <div style={loadingContact ? {display: 'none'} : {}}>\r\n                <MailForm setLoading={setLoadingContact}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact;"],"sourceRoot":""}